syntax = "proto3";
import "protos/changemanagement.proto";

option csharp_namespace = "RedflyDatabaseSyncProxy.Protos.Mongo";

package changemanagement;

// The NativeGrpcMongoChakraService service definition.
service NativeGrpcMongoChakraService {
  // Starts the change management process for a client.
  rpc StartChakraSync(StartChakraSyncRequest) returns (StartChakraSyncResponse);
  // Stops the change management process for a client.
  rpc StopChakraSync(StopChakraSyncRequest) returns (StopChakraSyncResponse);
  // Bi-directional stream for server to client callbacks.
  rpc CommunicateWithClient(stream ClientMessage) returns (stream ServerMessage);
  // Regular status request from client to server
  rpc GetChakraSyncStatus(GetChakraSyncStatusRequest) returns (GetChakraSyncStatusResponse);
}

// The request message containing the client's information.
message StartChakraSyncRequest {
  string client_session_id = 1;
  string encryptedClientId = 2;
  string encryptedClientName = 3;
  string encryptionKey = 4;
  string encryptedMongoServerName = 5;
  string encryptedMongoDatabaseName = 6;
  string encryptedMongoUserName = 7;
  string encryptedMongoPassword = 8;
  string encryptedRedisServerName = 12;
  int32 redisPortNo = 13;
  string encryptedRedisPassword = 14;
  bool redisUsesSsl = 15;
  string redisSslProtocol = 16;
  bool redisAbortConnect = 17;
  int32 redisConnectTimeout = 18;
  int32 redisSyncTimeout = 19;
  int32 redisAsyncTimeout = 20;
  bool runInitialSync = 21;
  bool enableDataReconciliation = 22;
}
